<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
	  http://www.springframework.org/schema/beans
	  http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
	  http://www.springframework.org/schema/context 
	  http://www.springframework.org/schema/context/spring-context-3.0.xsd
	  http://www.springframework.org/schema/util 
	  http://www.springframework.org/schema/util/spring-util-3.0.xsd
	  http://www.springframework.org/schema/task
      http://www.springframework.org/schema/task/spring-task-3.0.xsd
	  http://www.springframework.org/schema/tx
	  http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	  http://www.springframework.org/schema/aop
	  http://www.springframework.org/schema/aop/spring-aop-3.0.xsd"
	default-autowire="byName">
	
	<!-- 
	<context:property-placeholder location="classpath:config/mysql.properties" ignore-unresolvable="true" />
	
	 -->
	 
    <!--配置数据库参数-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init"
		destroy-method="close" >
		
		<property name="driverClassName" value="com.mysql.jdbc.Driver"/>
		<property name="url" value="jdbc:mysql://127.0.0.1:3306/dz?useUnicode=true&amp;characterEncoding=utf8&amp;autoReconnect=true"/>
		
		<property name="password" value="duwenjie"/>
		<property name="username" value="root"/>
		
		
			<!-- 超时等待时间以毫秒为单位   --> 
		<property name="maxWait" value="3000"/> 
		<property name="maxActive" value="500"/>  
        <!--minIdle: 最小空闲连接-->    
        <property name="minIdle" value="1"/>  
        <!--maxIdle: 最大空闲连接-->    
        <property name="maxIdle" value="10"/>  
        <!--initialSize: 初始化连接-->    
        <property name="initialSize" value="5"/>  
        <!-- 连接被泄露时是否打印 -->  
        <property name="logAbandoned" value="true"/>  
        <!--removeAbandoned: 是否自动回收超时连接-->    
        <property name="removeAbandoned"  value="true"/>  
        <!--removeAbandonedTimeout: 超时时间(以秒数为单位)-->    
        <property name="removeAbandonedTimeout" value="10"/> 
        <!-- 在空闲连接回收器线程运行期间休眠的时间值,以毫秒为单位. -->  
        <property name="timeBetweenEvictionRunsMillis" value="10000"/>  
        <!--  在每次空闲连接回收器线程(如果有)运行时检查的连接数量 -->  
        <property name="numTestsPerEvictionRun" value="10"/>  
        <!-- 1000 * 60 * 30  连接在池中保持空闲而不被空闲连接回收器线程-->  
        <property name="minEvictableIdleTimeMillis" value="10000"/> 
	</bean>
    
    <!-- jdbcTemplate  
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"></property>
	</bean>  com.dz.l8023.project.tab.model-->

    <!--mybatis sqlSessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:config/mybatis-config.xml"/>
        <!-- 数据库对象所在位置 -->
        <property name="typeAliasesPackage" value="com.dz.l8023.project.tab.model"/>
        <!-- dao 实现类存放位置  com.dz.l8023.project.tab.mapper-->
        <property name="mapperLocations" value="classpath*:com/dz/l8023/project/tab/mapper/*Mapper.xml"/>
    </bean>

    <!--mybatis spring 整合-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!--扫描dao接口-->
        <property name="basePackage" value="com.dz.l8023.project.tab.dao"/>
    </bean>
    
    
    <!-- redis配置 
	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig"
		p:maxTotal="${redis.maxActive}" p:maxIdle="${redis.maxInle}"
		p:maxWaitMillis="${redis.maxWaitTime}" p:testOnBorrow="true" 
		p:minIdle="${redis.minInle}"
		/>

	<bean id="connectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
		p:hostName="${redis.host}" p:port="${redis.port0}" p:poolConfig-ref="poolConfig"
		p:password="${redis.password}" />

	<bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate"
		p:connectionFactory-ref="connectionFactory" />-->
    
    
</beans>